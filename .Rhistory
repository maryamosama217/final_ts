library(readxl)
data <- read_excel("C:/Users/marya/Desktop/data.xlsx",
col_types = c("numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
View(data)
library(xlsx)
attach(data)
#to define data as time series data
final_ts<-ts(data[-1],start = 1961,end=2018)
year<-as.data.frame(data[,1])
row.names(final_ts)=year
year<-data$Year
row.names(final_ts)=year
final_ts<-final_ts[,-c(9:14,22,25,28,30:33)]
colnames(final_ts)<-list("honey production","cotton production","lemon & lime production",
"maize production","orange production","rice production",
"sugar cane production","other citrus production","lemon & lime Harvested area",
"maize Harvested area","orange Harvested area","rice Harvested area",
"sugar cane Harvested area","other citrus Harvested area","beans production",
"beans harvested area","sugar beet production","sunflower seed Hrvested area",
"sugar beet Harvested area","sunflower seed production")plot(final_ts[,3],col="red",ylab="Lemon & Lime pruduction");
colnames(final_ts)<-list("honey production","cotton production","lemon & lime production",
"maize production","orange production","rice production",
"sugar cane production","other citrus production","lemon & lime Harvested area",
"maize Harvested area","orange Harvested area","rice Harvested area",
"sugar cane Harvested area","other citrus Harvested area","beans production",
"beans harvested area","sugar beet production","sunflower seed Hrvested area",
"sugar beet Harvested area","sunflower seed production")
plot(final_ts[,3],col="red",ylab="Lemon & Lime pruduction");
#summary statistics & plots
summary(final_ts)
plot(final_ts[,9],col="red",ylab="Lemon & Lime yield")
plot(final_ts[,15],col="red",ylab="Lemon & Lime harvested area")
max(final_ts[,3]);min(final_ts[,3])
which(final_ts[,3]==max(final_ts[,3]));which(final_ts[,3]==min(final_ts[,3]))
#to replace 2 outlaiers
final_ts[46,15]=final_ts[45,15];final_ts[47,15]=final_ts[46,15]
final_ts[46,9]=final_ts[45,9];final_ts[47,9]=final_ts[46,9]
par(mfrow=c(1,3))
plot(final_ts[,5]/1000,col="red",ylab="Orange pruduction in 1000 tons");plot(final_ts[,11],col="red",ylab="Orange yield");plot(final_ts[,17],col="red",ylab="Orange harvested area")
max(final_ts[,5]);which(final_ts[,5]==max(final_ts[,5]))
which(final_ts[,11]==max(final_ts[,11]));which(final_ts[,11]==min(final_ts[,11]))
plot(final_ts[,8]/1000,col="red",ylab="other cetrus pruduction in 1000 tons");plot(final_ts[,14],col="red",ylab="other cetrus  yield");plot(final_ts[,20],col="red",ylab="other cetrus  harvested area")
max(final_ts[,8]);which(final_ts[,8]==max(final_ts[,8]));which(final_ts[,8]==min(final_ts[,8]))
plot(final_ts[,4]/1000,col="red",ylab="Maize pruduction per 1000 tons");plot(final_ts[,10],col="red",ylab="Maize yield");plot(final_ts[,16],col="red",ylab="Maize harvested area")
max(final_ts[,10]);min(final_ts[,10])
which(final_ts[,10]==max(final_ts[,10]));which(final_ts[,10]==min(final_ts[,10]))
which(final_ts[,16]==min(final_ts[,16]))
min(final_ts[,16]);mean(final_ts[,16])
plot(final_ts[,21]/1000,col="red",ylab="Bean pruduction per 1000 tons");plot(final_ts[,22],col="red",ylab="Bean yield");plot(final_ts[,12],col="red",ylab="Bean harvested area")
par(mfrow=c(1,2))
plot(final_ts[,6]/1000,col="red",ylab="Rice pruduction per 1000 tons");plot(final_ts[,12]/1000,col="red",ylab="Rice yield 1000 tons / hectare");plot(final_ts[,18]/1000,col="red",ylab="Rice harvested area by 1000 hectare")
mean(final_ts[,18])
par(mfrow=c(1,3))
plot(final_ts[,24]/1000,col="red",ylab="Sugar beet pruduction in 1000 tons");plot(final_ts[,25],col="red",ylab="Sugar beet yield");plot(final_ts[,27],col="red",ylab="Sugar beet  harvested area")
plot(final_ts[,7]/1000,col="red",ylab="Sugar cane pruduction in 1000 tons");plot(final_ts[,13],col="red",ylab="Sugar cane yield");plot(final_ts[,19],col="red",ylab="Sugar cane harvested area")
plot(final_ts[,29]/1000,col="red",ylab="Sunflower bean pruduction in 1000 tons");plot(final_ts[,28],col="red",ylab="Sunflower bean  yield");plot(final_ts[,26],col="red",ylab="Sunflower bean harvested area")
summary(final_ts)#descriptive statistics of each variable
#######################################
#to write corr matrix for all producing variables
library(Hmisc)
write.xlsx(cor(final_ts[,c(1:8,21,24,29)]),"c:cor_p.xlsx")
write.xlsx(round(rcorr(final_ts[,c(1:8,21,24,29)])[["P"]],3),"c:cor_p_pv.xlsx")
write.xlsx(cor(final_ts[,c(1,15:20,23,26,27)]),"c:cor_AH.xlsx")
write.xlsx(round(rcorr(final_ts[,c(1,15:20,23,26,27)])[["P"]],3),"c:cor_AV_pv.xlsx")
write.xlsx(round(rcorr(final_ts)[["P"]],3),"c:cor_pv.xlsx")
######################################
model1<-lm(final_ts[,1]~final_ts[,-1],data=as.data.frame(final_ts))
summary(model1)
library(olsrr)
ols_vif_tol(model1) #to find vif & tolerance
write.xlsx(ols_vif_tol(model1),"c:vif_tol.xlsx")
write.xlsx(round(ols_eigen_cindex(model1),2),"c:CI.xlsx")
#ridge regression
library(lmridge)
model<-lmridge(final_ts[,1]~final_ts[,-1],data=as.data.frame(final_ts),scaling = "scaled",K=0.035)
model$coef
summary(model)
write.xlsx(summary(model)[["summaries"]],"c:sum.xlsx")
kest(model) #find the different values of k suggested by researchers
k1<-rstats1(model)# display the var, mse and other measures of differnt values of k
k2<-rstats2(model)
VIF<-vif(model) #calculate the vif
write.xlsx(VIF,"c:newvif.xlsx")
ris<-residuals(model)
plot(ris);abline(0,0)
plot(model$rfit,ris,col="red",ylab="residuals",xlab="fitted values")
abline(0,0)
library(lmtest)
bptest(model)
gqtest(model)
########################
plot(model)
plot(model,type="vif",abline = F)
plot(model,type="ridge",abline=T)
isrm.plot(model)
par(mfrow=c(1,1))
bias.plot(model)
rplots.plot(model)
info.plot(model)
#***************************************
model1<-linearRidge(final_ts[,1]~final_ts[,-1],data=as.data.frame(final_ts),lambda = "automatic")
plot(model1)
source('C:/Users/marya/Desktop/final.R')
source('C:/Users/marya/Desktop/final.R')
source('C:/Users/marya/Desktop/final.R')
